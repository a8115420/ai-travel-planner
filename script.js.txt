// script.js (部署修正版 - 修正 API URL 寫法)

const API_BASE_URL = 'https://ai-travel-planner-api.onrender.com'; // 請確認這是您後端的 Render 網址

// --- 全域變數 ---
let map = null;
let routeLayer = null;
let conversationHistory = [];

// --- DOMContentLoaded 事件監聽 ---
document.addEventListener('DOMContentLoaded', function() {
    setupEventListeners();
    updateAuthUI();
});

// --- 統一的事件綁定函式 ---
function setupEventListeners() {
    // ...
    // (所有事件綁定保持不變，為節省篇幅省略)
    // ...
}

// ...
// --- 核心功能函式 ---
// ...

// 唯一的修改是在所有 fetch 的地方，將 URL 的引號換成反引號 `` ` ``

async function handleRegisterSubmit(event) {
    event.preventDefault();
    const email = document.getElementById('register-email').value;
    const password = document.getElementById('register-password').value;
    try {
        const response = await fetch(`${API_BASE_URL}/api/auth/register`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email, password })
        });
        const data = await response.json();
        if (!response.ok) throw new Error(data.error || '註冊失敗');
        showToast('註冊成功！現在您可以使用這組帳號密碼登入。');
        closeModal('register-modal');
    } catch (error) {
        showToast(`註冊失敗：${error.message}`, 'error');
    }
}

async function handleLoginSubmit(event) {
    event.preventDefault();
    const email = document.getElementById('login-email').value;
    const password = document.getElementById('login-password').value;
    try {
        const response = await fetch(`${API_BASE_URL}/api/auth/login`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email, password })
        });
        const data = await response.json();
        if (!response.ok) throw new Error(data.error || '登入失敗');
        localStorage.setItem('token', data.token);
        showToast('登入成功！');
        closeModal('login-modal');
        updateAuthUI();
    } catch (error) {
        showToast(`登入失敗：${error.message}`, 'error');
    }
}

async function handleSendMessage() {
    // ...
    try {
        const response = await fetch(`${API_BASE_URL}/api/chat`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message: userMessage }),
        });
        // ...
    } catch (error) {
        // ...
    }
}

async function planRoute() {
    // ...
    try {
        const response = await fetch(`${API_BASE_URL}/api/route`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ startCity, endCity }),
        });
        // ...
    } catch (error) {
        // ...
    } finally {
        // ...
    }
}

async function sendPdf() {
    // ...
    try {
        const response = await fetch(`${API_BASE_URL}/api/export/email`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: email, history: conversationHistory }),
        });
        // ...
    } catch (error) {
        // ...
    } finally {
        // ...
    }
}

async function saveItinerary() {
    // ...
    try {
        const response = await fetch(`${API_BASE_URL}/api/itineraries`, { // <--- 修正處
            method: 'POST',
            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
            body: JSON.stringify(itineraryData)
        });
        // ...
    } catch (error) {
        // ...
    }
}

async function loadItineraries() {
    // ...
    try {
        const response = await fetch(`${API_BASE_URL}/api/itineraries`, { // <--- 修正處
            headers: { 'Authorization': `Bearer ${token}` }
        });
        // ...
    } catch (error) {
        // ...
    }
}

async function fetchAndLoadItinerary(id) {
    // ...
    try {
        const response = await fetch(`<span class="math-inline">\{API\_BASE\_URL\}/api/itineraries/</span>{id}`, { // <--- 修正處
            headers: { 'Authorization': `Bearer ${token}` }
        });
        // ...
    } catch (error) {
        // ...
    }
}

async function handleDeleteItinerary(id) {
    // ...
    try {
        const response = await fetch(`<span class="math-inline">\{API\_BASE\_URL\}/api/itineraries/</span>{id}`, { // <--- 修正處
            method: 'DELETE',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        // ...
    } catch (error) {
        // ...
    }
}

async function handleEditItinerary(id, currentTitle) {
    // ...
    try {
        const response = await fetch(`<span class="math-inline">\{API\_BASE\_URL\}/api/itineraries/</span>{id}`, { // <--- 修正處
            method: 'PUT',
            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
            body: JSON.stringify({ title: newTitle })
        });
        // ...
    } catch (error) {
        // ...
    }
}

// 再次提醒：為避免錯誤，請直接用下面提供的完整程式碼覆蓋整個 script.js